//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RoyalSISWS.Models.WEB_ERPSALUD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class WEB_ERPSALUDEntities : DbContext
    {
        public WEB_ERPSALUDEntities()
            : base("name=WEB_ERPSALUDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<ParametrosMast> ParametrosMast { get; set; }
    
        public virtual ObjectResult<SP_ParametrosMastListar_Result> SP_ParametrosMastListar(string companiaCodigo, string aplicacionCodigo, string parametroClave, string descripcionParametro, string explicacion, string tipodeDatoFlag, string texto, Nullable<decimal> numero, Nullable<System.DateTime> fecha, string financeComunFlag, string estado, string ultimoUsuario, Nullable<System.DateTime> ultimaFechaModif, string explicacionAdicional, string texto1, string texto2, string unidadReplicacion, string accion, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion)
        {
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var parametroClaveParameter = parametroClave != null ?
                new ObjectParameter("ParametroClave", parametroClave) :
                new ObjectParameter("ParametroClave", typeof(string));
    
            var descripcionParametroParameter = descripcionParametro != null ?
                new ObjectParameter("DescripcionParametro", descripcionParametro) :
                new ObjectParameter("DescripcionParametro", typeof(string));
    
            var explicacionParameter = explicacion != null ?
                new ObjectParameter("Explicacion", explicacion) :
                new ObjectParameter("Explicacion", typeof(string));
    
            var tipodeDatoFlagParameter = tipodeDatoFlag != null ?
                new ObjectParameter("TipodeDatoFlag", tipodeDatoFlag) :
                new ObjectParameter("TipodeDatoFlag", typeof(string));
    
            var textoParameter = texto != null ?
                new ObjectParameter("Texto", texto) :
                new ObjectParameter("Texto", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(decimal));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var financeComunFlagParameter = financeComunFlag != null ?
                new ObjectParameter("FinanceComunFlag", financeComunFlag) :
                new ObjectParameter("FinanceComunFlag", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var ultimoUsuarioParameter = ultimoUsuario != null ?
                new ObjectParameter("UltimoUsuario", ultimoUsuario) :
                new ObjectParameter("UltimoUsuario", typeof(string));
    
            var ultimaFechaModifParameter = ultimaFechaModif.HasValue ?
                new ObjectParameter("UltimaFechaModif", ultimaFechaModif) :
                new ObjectParameter("UltimaFechaModif", typeof(System.DateTime));
    
            var explicacionAdicionalParameter = explicacionAdicional != null ?
                new ObjectParameter("ExplicacionAdicional", explicacionAdicional) :
                new ObjectParameter("ExplicacionAdicional", typeof(string));
    
            var texto1Parameter = texto1 != null ?
                new ObjectParameter("Texto1", texto1) :
                new ObjectParameter("Texto1", typeof(string));
    
            var texto2Parameter = texto2 != null ?
                new ObjectParameter("Texto2", texto2) :
                new ObjectParameter("Texto2", typeof(string));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ParametrosMastListar_Result>("SP_ParametrosMastListar", companiaCodigoParameter, aplicacionCodigoParameter, parametroClaveParameter, descripcionParametroParameter, explicacionParameter, tipodeDatoFlagParameter, textoParameter, numeroParameter, fechaParameter, financeComunFlagParameter, estadoParameter, ultimoUsuarioParameter, ultimaFechaModifParameter, explicacionAdicionalParameter, texto1Parameter, texto2Parameter, unidadReplicacionParameter, accionParameter, iNICIOParameter, nUMEROFILASParameter, usuarioCreacionParameter, fechaCreacionParameter);
        }
    
        public virtual ObjectResult<SP_VW_ATENCIONPACIENTE_LISTAR_Result> SP_VW_ATENCIONPACIENTE_LISTAR(string unidadReplicacion, Nullable<long> idEpisodioAtencion, string unidadReplicacionEC, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<int> aaaaAtencion, Nullable<long> episodioAtencion, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaAtencion, Nullable<int> tipoAtencion, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, Nullable<int> tipoOrdenAtencion, Nullable<int> estado, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, Nullable<int> idEspecialidad, string codigoOA, Nullable<System.DateTime> fechaOrden, Nullable<int> idProcedimiento, Nullable<int> idTipoOrden, Nullable<System.DateTime> fechaRegistroEpiClinico, Nullable<System.DateTime> fechaCierreEpiClinico, Nullable<int> tipoPaciente, Nullable<int> edad, string codigoHC, string codigoHCAnterior, string codigoHCSecundario, string tipoHistoria, Nullable<int> estadoPaciente, Nullable<int> numeroFile, Nullable<int> iDPACIENTE_OK, Nullable<int> persona, string nombreCompleto, string tipoDocumento, string documento, string esCliente, string esProveedor, string esEmpleado, string esOtro, string tipoPersona, Nullable<System.DateTime> fechaNacimiento, string sexo, string nacionalidad, string estadoCivil, string nivelInstruccion, string codigoPostal, string provincia, string departamento, Nullable<System.DateTime> fecIniDiscamec, Nullable<System.DateTime> fecFinDiscamec, string pais, string esPaciente, string esEmpresa, Nullable<int> personanew, string estadoPersona, string servicio, Nullable<int> iNICIO, Nullable<int> nUMEROFILAS, string version, string aCCION)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var aaaaAtencionParameter = aaaaAtencion.HasValue ?
                new ObjectParameter("aaaaAtencion", aaaaAtencion) :
                new ObjectParameter("aaaaAtencion", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(long));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var fechaOrdenParameter = fechaOrden.HasValue ?
                new ObjectParameter("FechaOrden", fechaOrden) :
                new ObjectParameter("FechaOrden", typeof(System.DateTime));
    
            var idProcedimientoParameter = idProcedimiento.HasValue ?
                new ObjectParameter("IdProcedimiento", idProcedimiento) :
                new ObjectParameter("IdProcedimiento", typeof(int));
    
            var idTipoOrdenParameter = idTipoOrden.HasValue ?
                new ObjectParameter("IdTipoOrden", idTipoOrden) :
                new ObjectParameter("IdTipoOrden", typeof(int));
    
            var fechaRegistroEpiClinicoParameter = fechaRegistroEpiClinico.HasValue ?
                new ObjectParameter("FechaRegistroEpiClinico", fechaRegistroEpiClinico) :
                new ObjectParameter("FechaRegistroEpiClinico", typeof(System.DateTime));
    
            var fechaCierreEpiClinicoParameter = fechaCierreEpiClinico.HasValue ?
                new ObjectParameter("FechaCierreEpiClinico", fechaCierreEpiClinico) :
                new ObjectParameter("FechaCierreEpiClinico", typeof(System.DateTime));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var codigoHCSecundarioParameter = codigoHCSecundario != null ?
                new ObjectParameter("CodigoHCSecundario", codigoHCSecundario) :
                new ObjectParameter("CodigoHCSecundario", typeof(string));
    
            var tipoHistoriaParameter = tipoHistoria != null ?
                new ObjectParameter("TipoHistoria", tipoHistoria) :
                new ObjectParameter("TipoHistoria", typeof(string));
    
            var estadoPacienteParameter = estadoPaciente.HasValue ?
                new ObjectParameter("EstadoPaciente", estadoPaciente) :
                new ObjectParameter("EstadoPaciente", typeof(int));
    
            var numeroFileParameter = numeroFile.HasValue ?
                new ObjectParameter("NumeroFile", numeroFile) :
                new ObjectParameter("NumeroFile", typeof(int));
    
            var iDPACIENTE_OKParameter = iDPACIENTE_OK.HasValue ?
                new ObjectParameter("IDPACIENTE_OK", iDPACIENTE_OK) :
                new ObjectParameter("IDPACIENTE_OK", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var esClienteParameter = esCliente != null ?
                new ObjectParameter("EsCliente", esCliente) :
                new ObjectParameter("EsCliente", typeof(string));
    
            var esProveedorParameter = esProveedor != null ?
                new ObjectParameter("EsProveedor", esProveedor) :
                new ObjectParameter("EsProveedor", typeof(string));
    
            var esEmpleadoParameter = esEmpleado != null ?
                new ObjectParameter("EsEmpleado", esEmpleado) :
                new ObjectParameter("EsEmpleado", typeof(string));
    
            var esOtroParameter = esOtro != null ?
                new ObjectParameter("EsOtro", esOtro) :
                new ObjectParameter("EsOtro", typeof(string));
    
            var tipoPersonaParameter = tipoPersona != null ?
                new ObjectParameter("TipoPersona", tipoPersona) :
                new ObjectParameter("TipoPersona", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var nacionalidadParameter = nacionalidad != null ?
                new ObjectParameter("Nacionalidad", nacionalidad) :
                new ObjectParameter("Nacionalidad", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var fecIniDiscamecParameter = fecIniDiscamec.HasValue ?
                new ObjectParameter("FecIniDiscamec", fecIniDiscamec) :
                new ObjectParameter("FecIniDiscamec", typeof(System.DateTime));
    
            var fecFinDiscamecParameter = fecFinDiscamec.HasValue ?
                new ObjectParameter("FecFinDiscamec", fecFinDiscamec) :
                new ObjectParameter("FecFinDiscamec", typeof(System.DateTime));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var personanewParameter = personanew.HasValue ?
                new ObjectParameter("personanew", personanew) :
                new ObjectParameter("personanew", typeof(int));
    
            var estadoPersonaParameter = estadoPersona != null ?
                new ObjectParameter("EstadoPersona", estadoPersona) :
                new ObjectParameter("EstadoPersona", typeof(string));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var iNICIOParameter = iNICIO.HasValue ?
                new ObjectParameter("INICIO", iNICIO) :
                new ObjectParameter("INICIO", typeof(int));
    
            var nUMEROFILASParameter = nUMEROFILAS.HasValue ?
                new ObjectParameter("NUMEROFILAS", nUMEROFILAS) :
                new ObjectParameter("NUMEROFILAS", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_VW_ATENCIONPACIENTE_LISTAR_Result>("SP_VW_ATENCIONPACIENTE_LISTAR", unidadReplicacionParameter, idEpisodioAtencionParameter, unidadReplicacionECParameter, idPacienteParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, aaaaAtencionParameter, episodioAtencionParameter, fechaRegistroParameter, fechaAtencionParameter, tipoAtencionParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, tipoOrdenAtencionParameter, estadoParameter, usuarioModificacionParameter, fechaModificacionParameter, idEspecialidadParameter, codigoOAParameter, fechaOrdenParameter, idProcedimientoParameter, idTipoOrdenParameter, fechaRegistroEpiClinicoParameter, fechaCierreEpiClinicoParameter, tipoPacienteParameter, edadParameter, codigoHCParameter, codigoHCAnteriorParameter, codigoHCSecundarioParameter, tipoHistoriaParameter, estadoPacienteParameter, numeroFileParameter, iDPACIENTE_OKParameter, personaParameter, nombreCompletoParameter, tipoDocumentoParameter, documentoParameter, esClienteParameter, esProveedorParameter, esEmpleadoParameter, esOtroParameter, tipoPersonaParameter, fechaNacimientoParameter, sexoParameter, nacionalidadParameter, estadoCivilParameter, nivelInstruccionParameter, codigoPostalParameter, provinciaParameter, departamentoParameter, fecIniDiscamecParameter, fecFinDiscamecParameter, paisParameter, esPacienteParameter, esEmpresaParameter, personanewParameter, estadoPersonaParameter, servicioParameter, iNICIOParameter, nUMEROFILASParameter, versionParameter, aCCIONParameter);
        }
    }
}
