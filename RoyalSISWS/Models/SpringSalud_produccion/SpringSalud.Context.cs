//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RoyalSISWS.Models.SpringSalud_produccion
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SpringSalud_produccionEntities : DbContext
    {
        public SpringSalud_produccionEntities()
            : base("name=SpringSalud_produccionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<VW_SA_PR_REP_ListaServiciosAuxiliares> VW_SA_PR_REP_ListaServiciosAuxiliares { get; set; }
        public DbSet<VW_SS_HCE_VisorAnamnesis> VW_SS_HCE_VisorAnamnesis { get; set; }
        public DbSet<VW_SS_HCE_VisorDiagnostico> VW_SS_HCE_VisorDiagnostico { get; set; }
        public DbSet<VW_SS_HCE_VisorEmergencia> VW_SS_HCE_VisorEmergencia { get; set; }
        public DbSet<VW_SS_HCE_VisorExamen> VW_SS_HCE_VisorExamen { get; set; }
        public DbSet<VW_SS_HCE_VisorProcedimientoInforme> VW_SS_HCE_VisorProcedimientoInforme { get; set; }
        public DbSet<VW_SS_HCE_VisorHistoria> VW_SS_HCE_VisorHistoria { get; set; }
        public DbSet<VW_SS_HCE_VisorReceta> VW_SS_HCE_VisorReceta { get; set; }
    
        public virtual ObjectResult<CW_AccesoUsuario_Result> CW_AccesoUsuario(Nullable<int> p_IDPERSONA, string p_USUARIO, string p_PASSWORD, string p_TDOCUMENTO, string p_ACCION)
        {
            var p_IDPERSONAParameter = p_IDPERSONA.HasValue ?
                new ObjectParameter("p_IDPERSONA", p_IDPERSONA) :
                new ObjectParameter("p_IDPERSONA", typeof(int));
    
            var p_USUARIOParameter = p_USUARIO != null ?
                new ObjectParameter("p_USUARIO", p_USUARIO) :
                new ObjectParameter("p_USUARIO", typeof(string));
    
            var p_PASSWORDParameter = p_PASSWORD != null ?
                new ObjectParameter("p_PASSWORD", p_PASSWORD) :
                new ObjectParameter("p_PASSWORD", typeof(string));
    
            var p_TDOCUMENTOParameter = p_TDOCUMENTO != null ?
                new ObjectParameter("p_TDOCUMENTO", p_TDOCUMENTO) :
                new ObjectParameter("p_TDOCUMENTO", typeof(string));
    
            var p_ACCIONParameter = p_ACCION != null ?
                new ObjectParameter("p_ACCION", p_ACCION) :
                new ObjectParameter("p_ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_AccesoUsuario_Result>("CW_AccesoUsuario", p_IDPERSONAParameter, p_USUARIOParameter, p_PASSWORDParameter, p_TDOCUMENTOParameter, p_ACCIONParameter);
        }
    
        public virtual ObjectResult<CW_HorarioMedico_Result> CW_HorarioMedico(Nullable<System.DateTime> ldt_Fecha, Nullable<int> ll_IdMedicoBusqueda, Nullable<int> ll_IdEspecialidadBusqueda, string ls_UnidadReplicacion)
        {
            var ldt_FechaParameter = ldt_Fecha.HasValue ?
                new ObjectParameter("ldt_Fecha", ldt_Fecha) :
                new ObjectParameter("ldt_Fecha", typeof(System.DateTime));
    
            var ll_IdMedicoBusquedaParameter = ll_IdMedicoBusqueda.HasValue ?
                new ObjectParameter("ll_IdMedicoBusqueda", ll_IdMedicoBusqueda) :
                new ObjectParameter("ll_IdMedicoBusqueda", typeof(int));
    
            var ll_IdEspecialidadBusquedaParameter = ll_IdEspecialidadBusqueda.HasValue ?
                new ObjectParameter("ll_IdEspecialidadBusqueda", ll_IdEspecialidadBusqueda) :
                new ObjectParameter("ll_IdEspecialidadBusqueda", typeof(int));
    
            var ls_UnidadReplicacionParameter = ls_UnidadReplicacion != null ?
                new ObjectParameter("ls_UnidadReplicacion", ls_UnidadReplicacion) :
                new ObjectParameter("ls_UnidadReplicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_HorarioMedico_Result>("CW_HorarioMedico", ldt_FechaParameter, ll_IdMedicoBusquedaParameter, ll_IdEspecialidadBusquedaParameter, ls_UnidadReplicacionParameter);
        }
    
        public virtual ObjectResult<A_SP_SS_HCE_ListaServiciosAuxiliares_Result> A_SP_SS_HCE_ListaServiciosAuxiliares(Nullable<int> idOrdenAtencion, Nullable<int> idEspecialidad)
        {
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<A_SP_SS_HCE_ListaServiciosAuxiliares_Result>("A_SP_SS_HCE_ListaServiciosAuxiliares", idOrdenAtencionParameter, idEspecialidadParameter);
        }
    
        public virtual ObjectResult<CW_BuscarMedicoEspecialidad_Result> CW_BuscarMedicoEspecialidad(Nullable<int> p_idEspecialidad, string p_UnidadReplicacion)
        {
            var p_idEspecialidadParameter = p_idEspecialidad.HasValue ?
                new ObjectParameter("p_idEspecialidad", p_idEspecialidad) :
                new ObjectParameter("p_idEspecialidad", typeof(int));
    
            var p_UnidadReplicacionParameter = p_UnidadReplicacion != null ?
                new ObjectParameter("p_UnidadReplicacion", p_UnidadReplicacion) :
                new ObjectParameter("p_UnidadReplicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_BuscarMedicoEspecialidad_Result>("CW_BuscarMedicoEspecialidad", p_idEspecialidadParameter, p_UnidadReplicacionParameter);
        }
    
        public virtual ObjectResult<CW_BuscarTraerMedico_Result> CW_BuscarTraerMedico(Nullable<int> idMedico, Nullable<int> idEspecialidad)
        {
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("idMedico", idMedico) :
                new ObjectParameter("idMedico", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("idEspecialidad", idEspecialidad) :
                new ObjectParameter("idEspecialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_BuscarTraerMedico_Result>("CW_BuscarTraerMedico", idMedicoParameter, idEspecialidadParameter);
        }
    
        public virtual ObjectResult<CW_CoberturaSeguro_Result> CW_CoberturaSeguro(string p_IDSEGURO)
        {
            var p_IDSEGUROParameter = p_IDSEGURO != null ?
                new ObjectParameter("p_IDSEGURO", p_IDSEGURO) :
                new ObjectParameter("p_IDSEGURO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_CoberturaSeguro_Result>("CW_CoberturaSeguro", p_IDSEGUROParameter);
        }
    
        public virtual int CW_DisponibilidadMedicaProxima(Nullable<System.DateTime> ldt_FechaBusquedaInicio, Nullable<System.DateTime> ldt_FechaBusquedaFinal, Nullable<int> ll_IdEspecialidadBusqueda, string ls_UnidadReplicacion, ObjectParameter ll_Idmedico)
        {
            var ldt_FechaBusquedaInicioParameter = ldt_FechaBusquedaInicio.HasValue ?
                new ObjectParameter("ldt_FechaBusquedaInicio", ldt_FechaBusquedaInicio) :
                new ObjectParameter("ldt_FechaBusquedaInicio", typeof(System.DateTime));
    
            var ldt_FechaBusquedaFinalParameter = ldt_FechaBusquedaFinal.HasValue ?
                new ObjectParameter("ldt_FechaBusquedaFinal", ldt_FechaBusquedaFinal) :
                new ObjectParameter("ldt_FechaBusquedaFinal", typeof(System.DateTime));
    
            var ll_IdEspecialidadBusquedaParameter = ll_IdEspecialidadBusqueda.HasValue ?
                new ObjectParameter("ll_IdEspecialidadBusqueda", ll_IdEspecialidadBusqueda) :
                new ObjectParameter("ll_IdEspecialidadBusqueda", typeof(int));
    
            var ls_UnidadReplicacionParameter = ls_UnidadReplicacion != null ?
                new ObjectParameter("ls_UnidadReplicacion", ls_UnidadReplicacion) :
                new ObjectParameter("ls_UnidadReplicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CW_DisponibilidadMedicaProxima", ldt_FechaBusquedaInicioParameter, ldt_FechaBusquedaFinalParameter, ll_IdEspecialidadBusquedaParameter, ls_UnidadReplicacionParameter, ll_Idmedico);
        }
    
        public virtual ObjectResult<CW_ListarEspecialidades_Result> CW_ListarEspecialidades(Nullable<int> p_idMedico)
        {
            var p_idMedicoParameter = p_idMedico.HasValue ?
                new ObjectParameter("p_idMedico", p_idMedico) :
                new ObjectParameter("p_idMedico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_ListarEspecialidades_Result>("CW_ListarEspecialidades", p_idMedicoParameter);
        }
    
        public virtual ObjectResult<CW_ListarHistorial_Result> CW_ListarHistorial(Nullable<int> p_idTitular)
        {
            var p_idTitularParameter = p_idTitular.HasValue ?
                new ObjectParameter("p_idTitular", p_idTitular) :
                new ObjectParameter("p_idTitular", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_ListarHistorial_Result>("CW_ListarHistorial", p_idTitularParameter);
        }
    
        public virtual ObjectResult<CW_ListarMedicos_Result> CW_ListarMedicos(Nullable<int> p_idEspecialidad)
        {
            var p_idEspecialidadParameter = p_idEspecialidad.HasValue ?
                new ObjectParameter("p_idEspecialidad", p_idEspecialidad) :
                new ObjectParameter("p_idEspecialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_ListarMedicos_Result>("CW_ListarMedicos", p_idEspecialidadParameter);
        }
    
        public virtual ObjectResult<CW_ListarPacientes_Result> CW_ListarPacientes(Nullable<int> p_IDPACIENTE)
        {
            var p_IDPACIENTEParameter = p_IDPACIENTE.HasValue ?
                new ObjectParameter("p_IDPACIENTE", p_IDPACIENTE) :
                new ObjectParameter("p_IDPACIENTE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_ListarPacientes_Result>("CW_ListarPacientes", p_IDPACIENTEParameter);
        }
    
        public virtual ObjectResult<CW_ListarUnidadReplicacion_Result> CW_ListarUnidadReplicacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_ListarUnidadReplicacion_Result>("CW_ListarUnidadReplicacion");
        }
    
        public virtual ObjectResult<CW_ListarTipoDocumento_Result> CW_ListarTipoDocumento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_ListarTipoDocumento_Result>("CW_ListarTipoDocumento");
        }
    
        public virtual ObjectResult<CW_ListarCitas_Result> CW_ListarCitas(Nullable<int> p_idTitular)
        {
            var p_idTitularParameter = p_idTitular.HasValue ?
                new ObjectParameter("p_idTitular", p_idTitular) :
                new ObjectParameter("p_idTitular", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CW_ListarCitas_Result>("CW_ListarCitas", p_idTitularParameter);
        }
    
        public virtual ObjectResult<A_SP_SS_HCE_VisorHistoria_Result> A_SP_SS_HCE_VisorHistoria(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string documento, string codsucursal)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var codsucursalParameter = codsucursal != null ?
                new ObjectParameter("codsucursal", codsucursal) :
                new ObjectParameter("codsucursal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<A_SP_SS_HCE_VisorHistoria_Result>("A_SP_SS_HCE_VisorHistoria", fechaInicioParameter, fechaFinParameter, documentoParameter, codsucursalParameter);
        }
    
        public virtual int SP_HCE_InteroperabilidadSalidaV0002(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HCE_InteroperabilidadSalidaV0002", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter);
        }
    
        public virtual int SP_HCE_ITIDConsultaExterna(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HCE_ITIDConsultaExterna", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_HCE_ITListarValidacion(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, string usuarioCreacion, Nullable<int> idOrdenAtencion, Nullable<int> linea, string secuenciaHCE, Nullable<System.DateTime> fechaCreacion)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));
    
            var secuenciaHCEParameter = secuenciaHCE != null ?
                new ObjectParameter("SecuenciaHCE", secuenciaHCE) :
                new ObjectParameter("SecuenciaHCE", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_HCE_ITListarValidacion", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, usuarioCreacionParameter, idOrdenAtencionParameter, lineaParameter, secuenciaHCEParameter, fechaCreacionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_HCE_ITListarValidacionEmergencia(string unidadReplicacion, Nullable<int> idEpisodioAtencion, Nullable<int> idPaciente, Nullable<int> episodioClinico, Nullable<int> idConsultaExterna, Nullable<int> idOrdenAtencion, Nullable<int> linea, Nullable<int> lineaOrdenAtencion, Nullable<int> tipoOrdenMedica, string componente, Nullable<int> tipoInterConsulta, Nullable<int> medico, Nullable<int> especialidad, Nullable<int> estadoDocumento, Nullable<int> indicadorEPS, Nullable<int> estado, Nullable<int> medicoResponsable, string usuarioCreacion, string usuarioModificacion, string secuenciaHCE, Nullable<System.DateTime> fechaCreacion, Nullable<System.DateTime> fechaModificacion, string accion, string version)
        {
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idConsultaExternaParameter = idConsultaExterna.HasValue ?
                new ObjectParameter("IdConsultaExterna", idConsultaExterna) :
                new ObjectParameter("IdConsultaExterna", typeof(int));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var tipoOrdenMedicaParameter = tipoOrdenMedica.HasValue ?
                new ObjectParameter("TipoOrdenMedica", tipoOrdenMedica) :
                new ObjectParameter("TipoOrdenMedica", typeof(int));
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var tipoInterConsultaParameter = tipoInterConsulta.HasValue ?
                new ObjectParameter("TipoInterConsulta", tipoInterConsulta) :
                new ObjectParameter("TipoInterConsulta", typeof(int));
    
            var medicoParameter = medico.HasValue ?
                new ObjectParameter("Medico", medico) :
                new ObjectParameter("Medico", typeof(int));
    
            var especialidadParameter = especialidad.HasValue ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(int));
    
            var estadoDocumentoParameter = estadoDocumento.HasValue ?
                new ObjectParameter("EstadoDocumento", estadoDocumento) :
                new ObjectParameter("EstadoDocumento", typeof(int));
    
            var indicadorEPSParameter = indicadorEPS.HasValue ?
                new ObjectParameter("IndicadorEPS", indicadorEPS) :
                new ObjectParameter("IndicadorEPS", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var medicoResponsableParameter = medicoResponsable.HasValue ?
                new ObjectParameter("MedicoResponsable", medicoResponsable) :
                new ObjectParameter("MedicoResponsable", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var secuenciaHCEParameter = secuenciaHCE != null ?
                new ObjectParameter("SecuenciaHCE", secuenciaHCE) :
                new ObjectParameter("SecuenciaHCE", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_HCE_ITListarValidacionEmergencia", unidadReplicacionParameter, idEpisodioAtencionParameter, idPacienteParameter, episodioClinicoParameter, idConsultaExternaParameter, idOrdenAtencionParameter, lineaParameter, lineaOrdenAtencionParameter, tipoOrdenMedicaParameter, componenteParameter, tipoInterConsultaParameter, medicoParameter, especialidadParameter, estadoDocumentoParameter, indicadorEPSParameter, estadoParameter, medicoResponsableParameter, usuarioCreacionParameter, usuarioModificacionParameter, secuenciaHCEParameter, fechaCreacionParameter, fechaModificacionParameter, accionParameter, versionParameter);
        }
    
        public virtual ObjectResult<SS_HC_ATENCIONES_SOA_Result> SS_HC_ATENCIONES_SOA(string tipoListado, string citaTipo, Nullable<System.DateTime> citaFecha, string origen, string nombreEspecialidad, string tipoPacienteNombre, string codigoOA, string cama, string tipoOrdenAtencionNombre, string codigoHC, string pacienteNombre, string medicoNombre, Nullable<int> idOrdenAtencion, Nullable<int> lineaOrdenAtencion, Nullable<int> idHospitalizacion, Nullable<int> idCita, Nullable<int> idPaciente, Nullable<int> tipoPaciente, Nullable<int> tipoAtencion, Nullable<int> idEspecialidad, Nullable<int> idMedico, Nullable<int> tipoOrdenAtencion, string componente, string compania, string sucursal, string estadoPersona, Nullable<int> estadoEpiClinico, string unidadReplicacion, string unidadReplicacionEC, Nullable<long> idEpisodioAtencion, Nullable<int> episodioClinico, Nullable<int> idEstablecimientoSalud, Nullable<int> idUnidadServicio, Nullable<int> idPersonalSalud, Nullable<long> episodioAtencion, Nullable<System.DateTime> fechaRegistro, Nullable<System.DateTime> fechaAtencion, Nullable<int> estadoEpiAtencion, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string usuarioCreacion, Nullable<System.DateTime> fechaCreacion, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, string version, string codigoHCAnterior, Nullable<int> indicadorCirugia, Nullable<int> indicadorExamenPrincipal, Nullable<int> indicadorSeguro, Nullable<int> modalidad, string sexo, string estadoCivil, string nivelInstruccion, string esPaciente, string esEmpresa, Nullable<int> inicio, Nullable<int> numeroFilas, string aCCION)
        {
            var tipoListadoParameter = tipoListado != null ?
                new ObjectParameter("tipoListado", tipoListado) :
                new ObjectParameter("tipoListado", typeof(string));
    
            var citaTipoParameter = citaTipo != null ?
                new ObjectParameter("CitaTipo", citaTipo) :
                new ObjectParameter("CitaTipo", typeof(string));
    
            var citaFechaParameter = citaFecha.HasValue ?
                new ObjectParameter("CitaFecha", citaFecha) :
                new ObjectParameter("CitaFecha", typeof(System.DateTime));
    
            var origenParameter = origen != null ?
                new ObjectParameter("Origen", origen) :
                new ObjectParameter("Origen", typeof(string));
    
            var nombreEspecialidadParameter = nombreEspecialidad != null ?
                new ObjectParameter("NombreEspecialidad", nombreEspecialidad) :
                new ObjectParameter("NombreEspecialidad", typeof(string));
    
            var tipoPacienteNombreParameter = tipoPacienteNombre != null ?
                new ObjectParameter("TipoPacienteNombre", tipoPacienteNombre) :
                new ObjectParameter("TipoPacienteNombre", typeof(string));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var camaParameter = cama != null ?
                new ObjectParameter("Cama", cama) :
                new ObjectParameter("Cama", typeof(string));
    
            var tipoOrdenAtencionNombreParameter = tipoOrdenAtencionNombre != null ?
                new ObjectParameter("TipoOrdenAtencionNombre", tipoOrdenAtencionNombre) :
                new ObjectParameter("TipoOrdenAtencionNombre", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var pacienteNombreParameter = pacienteNombre != null ?
                new ObjectParameter("PacienteNombre", pacienteNombre) :
                new ObjectParameter("PacienteNombre", typeof(string));
    
            var medicoNombreParameter = medicoNombre != null ?
                new ObjectParameter("MedicoNombre", medicoNombre) :
                new ObjectParameter("MedicoNombre", typeof(string));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaOrdenAtencionParameter = lineaOrdenAtencion.HasValue ?
                new ObjectParameter("LineaOrdenAtencion", lineaOrdenAtencion) :
                new ObjectParameter("LineaOrdenAtencion", typeof(int));
    
            var idHospitalizacionParameter = idHospitalizacion.HasValue ?
                new ObjectParameter("IdHospitalizacion", idHospitalizacion) :
                new ObjectParameter("IdHospitalizacion", typeof(int));
    
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var tipoPacienteParameter = tipoPaciente.HasValue ?
                new ObjectParameter("TipoPaciente", tipoPaciente) :
                new ObjectParameter("TipoPaciente", typeof(int));
    
            var tipoAtencionParameter = tipoAtencion.HasValue ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var idMedicoParameter = idMedico.HasValue ?
                new ObjectParameter("IdMedico", idMedico) :
                new ObjectParameter("IdMedico", typeof(int));
    
            var tipoOrdenAtencionParameter = tipoOrdenAtencion.HasValue ?
                new ObjectParameter("TipoOrdenAtencion", tipoOrdenAtencion) :
                new ObjectParameter("TipoOrdenAtencion", typeof(int));
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var estadoPersonaParameter = estadoPersona != null ?
                new ObjectParameter("EstadoPersona", estadoPersona) :
                new ObjectParameter("EstadoPersona", typeof(string));
    
            var estadoEpiClinicoParameter = estadoEpiClinico.HasValue ?
                new ObjectParameter("EstadoEpiClinico", estadoEpiClinico) :
                new ObjectParameter("EstadoEpiClinico", typeof(int));
    
            var unidadReplicacionParameter = unidadReplicacion != null ?
                new ObjectParameter("UnidadReplicacion", unidadReplicacion) :
                new ObjectParameter("UnidadReplicacion", typeof(string));
    
            var unidadReplicacionECParameter = unidadReplicacionEC != null ?
                new ObjectParameter("UnidadReplicacionEC", unidadReplicacionEC) :
                new ObjectParameter("UnidadReplicacionEC", typeof(string));
    
            var idEpisodioAtencionParameter = idEpisodioAtencion.HasValue ?
                new ObjectParameter("IdEpisodioAtencion", idEpisodioAtencion) :
                new ObjectParameter("IdEpisodioAtencion", typeof(long));
    
            var episodioClinicoParameter = episodioClinico.HasValue ?
                new ObjectParameter("EpisodioClinico", episodioClinico) :
                new ObjectParameter("EpisodioClinico", typeof(int));
    
            var idEstablecimientoSaludParameter = idEstablecimientoSalud.HasValue ?
                new ObjectParameter("IdEstablecimientoSalud", idEstablecimientoSalud) :
                new ObjectParameter("IdEstablecimientoSalud", typeof(int));
    
            var idUnidadServicioParameter = idUnidadServicio.HasValue ?
                new ObjectParameter("IdUnidadServicio", idUnidadServicio) :
                new ObjectParameter("IdUnidadServicio", typeof(int));
    
            var idPersonalSaludParameter = idPersonalSalud.HasValue ?
                new ObjectParameter("IdPersonalSalud", idPersonalSalud) :
                new ObjectParameter("IdPersonalSalud", typeof(int));
    
            var episodioAtencionParameter = episodioAtencion.HasValue ?
                new ObjectParameter("EpisodioAtencion", episodioAtencion) :
                new ObjectParameter("EpisodioAtencion", typeof(long));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var fechaAtencionParameter = fechaAtencion.HasValue ?
                new ObjectParameter("FechaAtencion", fechaAtencion) :
                new ObjectParameter("FechaAtencion", typeof(System.DateTime));
    
            var estadoEpiAtencionParameter = estadoEpiAtencion.HasValue ?
                new ObjectParameter("EstadoEpiAtencion", estadoEpiAtencion) :
                new ObjectParameter("EstadoEpiAtencion", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var codigoHCAnteriorParameter = codigoHCAnterior != null ?
                new ObjectParameter("CodigoHCAnterior", codigoHCAnterior) :
                new ObjectParameter("CodigoHCAnterior", typeof(string));
    
            var indicadorCirugiaParameter = indicadorCirugia.HasValue ?
                new ObjectParameter("IndicadorCirugia", indicadorCirugia) :
                new ObjectParameter("IndicadorCirugia", typeof(int));
    
            var indicadorExamenPrincipalParameter = indicadorExamenPrincipal.HasValue ?
                new ObjectParameter("IndicadorExamenPrincipal", indicadorExamenPrincipal) :
                new ObjectParameter("IndicadorExamenPrincipal", typeof(int));
    
            var indicadorSeguroParameter = indicadorSeguro.HasValue ?
                new ObjectParameter("IndicadorSeguro", indicadorSeguro) :
                new ObjectParameter("IndicadorSeguro", typeof(int));
    
            var modalidadParameter = modalidad.HasValue ?
                new ObjectParameter("Modalidad", modalidad) :
                new ObjectParameter("Modalidad", typeof(int));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var estadoCivilParameter = estadoCivil != null ?
                new ObjectParameter("EstadoCivil", estadoCivil) :
                new ObjectParameter("EstadoCivil", typeof(string));
    
            var nivelInstruccionParameter = nivelInstruccion != null ?
                new ObjectParameter("NivelInstruccion", nivelInstruccion) :
                new ObjectParameter("NivelInstruccion", typeof(string));
    
            var esPacienteParameter = esPaciente != null ?
                new ObjectParameter("EsPaciente", esPaciente) :
                new ObjectParameter("EsPaciente", typeof(string));
    
            var esEmpresaParameter = esEmpresa != null ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(string));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("Inicio", inicio) :
                new ObjectParameter("Inicio", typeof(int));
    
            var numeroFilasParameter = numeroFilas.HasValue ?
                new ObjectParameter("NumeroFilas", numeroFilas) :
                new ObjectParameter("NumeroFilas", typeof(int));
    
            var aCCIONParameter = aCCION != null ?
                new ObjectParameter("ACCION", aCCION) :
                new ObjectParameter("ACCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SS_HC_ATENCIONES_SOA_Result>("SS_HC_ATENCIONES_SOA", tipoListadoParameter, citaTipoParameter, citaFechaParameter, origenParameter, nombreEspecialidadParameter, tipoPacienteNombreParameter, codigoOAParameter, camaParameter, tipoOrdenAtencionNombreParameter, codigoHCParameter, pacienteNombreParameter, medicoNombreParameter, idOrdenAtencionParameter, lineaOrdenAtencionParameter, idHospitalizacionParameter, idCitaParameter, idPacienteParameter, tipoPacienteParameter, tipoAtencionParameter, idEspecialidadParameter, idMedicoParameter, tipoOrdenAtencionParameter, componenteParameter, companiaParameter, sucursalParameter, estadoPersonaParameter, estadoEpiClinicoParameter, unidadReplicacionParameter, unidadReplicacionECParameter, idEpisodioAtencionParameter, episodioClinicoParameter, idEstablecimientoSaludParameter, idUnidadServicioParameter, idPersonalSaludParameter, episodioAtencionParameter, fechaRegistroParameter, fechaAtencionParameter, estadoEpiAtencionParameter, fechaInicioParameter, fechaFinParameter, usuarioCreacionParameter, fechaCreacionParameter, usuarioModificacionParameter, fechaModificacionParameter, versionParameter, codigoHCAnteriorParameter, indicadorCirugiaParameter, indicadorExamenPrincipalParameter, indicadorSeguroParameter, modalidadParameter, sexoParameter, estadoCivilParameter, nivelInstruccionParameter, esPacienteParameter, esEmpresaParameter, inicioParameter, numeroFilasParameter, aCCIONParameter);
        }
    }
}
